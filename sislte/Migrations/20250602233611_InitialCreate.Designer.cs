// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using sislte.Core;

#nullable disable

namespace sislte.Migrations
{
    [DbContext(typeof(SisContext))]
    [Migration("20250602233611_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CourseCourseProgram", b =>
                {
                    b.Property<int>("CourseProgramId")
                        .HasColumnType("integer");

                    b.Property<int>("CoursesId")
                        .HasColumnType("integer");

                    b.HasKey("CourseProgramId", "CoursesId");

                    b.HasIndex("CoursesId");

                    b.ToTable("Courses_CoursePrograms", (string)null);
                });

            modelBuilder.Entity("sislte.Models.Advisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Advisors");
                });

            modelBuilder.Entity("sislte.Models.Announce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Announces");
                });

            modelBuilder.Entity("sislte.Models.AttendanceEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("GradeId")
                        .HasColumnType("integer");

                    b.Property<int>("Presence")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.ToTable("AttendanceEntries");
                });

            modelBuilder.Entity("sislte.Models.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DetailedStudentId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DetailedStudentId");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("sislte.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Ects")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Theory")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("sislte.Models.CourseProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lang")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CoursePrograms");
                });

            modelBuilder.Entity("sislte.Models.DetailedStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvisorId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int>("EarnedCredits")
                        .HasColumnType("integer");

                    b.Property<string>("Education")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmergencyPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("EntranceDate")
                        .HasColumnType("date");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("Gpa")
                        .HasColumnType("double precision");

                    b.Property<DateOnly>("GraduateDate")
                        .HasColumnType("date");

                    b.Property<double>("Loans")
                        .HasColumnType("double precision");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ScholarshipId")
                        .HasColumnType("integer");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AdvisorId");

                    b.HasIndex("ScholarshipId");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("DetailedStudents");
                });

            modelBuilder.Entity("sislte.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Act1")
                        .HasColumnType("integer");

                    b.Property<int>("Act2")
                        .HasColumnType("integer");

                    b.Property<int>("Att")
                        .HasColumnType("integer");

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<int>("Final")
                        .HasColumnType("integer");

                    b.Property<int>("Iw")
                        .HasColumnType("integer");

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StudentSemesterId")
                        .HasColumnType("integer");

                    b.Property<int>("Sum")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StudentSemesterId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("sislte.Models.Scholarship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Scholarships");
                });

            modelBuilder.Entity("sislte.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("DetailedStudentId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DetailedStudentId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("sislte.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("sislte.Models.StudentCourseProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lang")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TranscriptId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TranscriptId")
                        .IsUnique();

                    b.ToTable("StudentCoursePrograms");
                });

            modelBuilder.Entity("sislte.Models.StudentSemester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("StudentCourseProgramId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StudentCourseProgramId");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("sislte.Models.Transcript", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DetailedStudentId")
                        .HasColumnType("integer");

                    b.Property<double?>("Gpa")
                        .HasColumnType("double precision");

                    b.Property<int?>("Sac")
                        .HasColumnType("integer");

                    b.Property<int?>("Tacc")
                        .HasColumnType("integer");

                    b.Property<int?>("Tatc")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DetailedStudentId")
                        .IsUnique();

                    b.ToTable("Transcripts");
                });

            modelBuilder.Entity("CourseCourseProgram", b =>
                {
                    b.HasOne("sislte.Models.CourseProgram", null)
                        .WithMany()
                        .HasForeignKey("CourseProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sislte.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("sislte.Models.AttendanceEntry", b =>
                {
                    b.HasOne("sislte.Models.Grade", "Grade")
                        .WithMany("AttendanceEntries")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("sislte.Models.Club", b =>
                {
                    b.HasOne("sislte.Models.DetailedStudent", null)
                        .WithMany("JoinedClubs")
                        .HasForeignKey("DetailedStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("sislte.Models.Course", b =>
                {
                    b.HasOne("sislte.Models.Grade", null)
                        .WithOne("Course")
                        .HasForeignKey("sislte.Models.Course", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("sislte.Models.DetailedStudent", b =>
                {
                    b.HasOne("sislte.Models.Advisor", "Advisor")
                        .WithMany("AdvisedStudents")
                        .HasForeignKey("AdvisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sislte.Models.Scholarship", "Scholarship")
                        .WithMany()
                        .HasForeignKey("ScholarshipId");

                    b.HasOne("sislte.Models.Student", "Student")
                        .WithOne("DetailedStudent")
                        .HasForeignKey("sislte.Models.DetailedStudent", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Advisor");

                    b.Navigation("Scholarship");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("sislte.Models.Grade", b =>
                {
                    b.HasOne("sislte.Models.StudentSemester", "StudentSemester")
                        .WithMany("Grades")
                        .HasForeignKey("StudentSemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentSemester");
                });

            modelBuilder.Entity("sislte.Models.Skill", b =>
                {
                    b.HasOne("sislte.Models.DetailedStudent", null)
                        .WithMany("Skills")
                        .HasForeignKey("DetailedStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("sislte.Models.StudentCourseProgram", b =>
                {
                    b.HasOne("sislte.Models.Transcript", "Transcript")
                        .WithOne("StudentCourseProgram")
                        .HasForeignKey("sislte.Models.StudentCourseProgram", "TranscriptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transcript");
                });

            modelBuilder.Entity("sislte.Models.StudentSemester", b =>
                {
                    b.HasOne("sislte.Models.StudentCourseProgram", "StudentCourseProgram")
                        .WithMany("StudentSemesters")
                        .HasForeignKey("StudentCourseProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentCourseProgram");
                });

            modelBuilder.Entity("sislte.Models.Transcript", b =>
                {
                    b.HasOne("sislte.Models.DetailedStudent", "DetailedStudent")
                        .WithOne("Transcript")
                        .HasForeignKey("sislte.Models.Transcript", "DetailedStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DetailedStudent");
                });

            modelBuilder.Entity("sislte.Models.Advisor", b =>
                {
                    b.Navigation("AdvisedStudents");
                });

            modelBuilder.Entity("sislte.Models.DetailedStudent", b =>
                {
                    b.Navigation("JoinedClubs");

                    b.Navigation("Skills");

                    b.Navigation("Transcript")
                        .IsRequired();
                });

            modelBuilder.Entity("sislte.Models.Grade", b =>
                {
                    b.Navigation("AttendanceEntries");

                    b.Navigation("Course")
                        .IsRequired();
                });

            modelBuilder.Entity("sislte.Models.Student", b =>
                {
                    b.Navigation("DetailedStudent");
                });

            modelBuilder.Entity("sislte.Models.StudentCourseProgram", b =>
                {
                    b.Navigation("StudentSemesters");
                });

            modelBuilder.Entity("sislte.Models.StudentSemester", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("sislte.Models.Transcript", b =>
                {
                    b.Navigation("StudentCourseProgram")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
